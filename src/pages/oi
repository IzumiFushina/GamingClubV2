import React, { useState, useEffect, useRef } from 'react';
import { View, Image, StyleSheet, Alert, Text, TextInput, TouchableOpacity, Animated, ImageBackground } from 'react-native';
import * as ImagePicker from 'expo-image-picker';
import Feather from '@expo/vector-icons/Feather';
import AntDesign from '@expo/vector-icons/AntDesign';
import Entypo from '@expo/vector-icons/Entypo';
import Fontisto from '@expo/vector-icons/Fontisto';


export default function Login() {
  const [avatar, setAvatar] = useState(null);
  const translateY = useRef(new Animated.Value(50)).current;

  useEffect(() => {
    Animated.timing(translateY, {
      toValue: 0, 
      duration: 1000, 
      useNativeDriver: true,
    }).start();

    (async () => {
      const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();
      if (status !== 'granted') {
        Alert.alert('Permissão necessária', 'Precisamos de permissão para acessar a galeria de fotos!');
      }
    })();
  }, []);

  const pickImage = async () => {
    try {
      let result = await ImagePicker.launchImageLibraryAsync({
        mediaTypes: ImagePicker.MediaTypeOptions.Images,
        allowsEditing: true,
        aspect: [4, 3],
        quality: 1,
      });

      if (!result.canceled) {
        setAvatar(result.assets[0].uri);
      }
    } catch (error) {
      Alert.alert('Erro', 'Houve um problema ao tentar acessar a galeria.');
    }
  };

  return (
    <View style={styles.container}>
      <ImageBackground 
        source={require('../images/foto12.png')} 
        style={styles.background} 
      >
        <Animated.View style={[styles.shadowCard, { transform: [{ translateY }] }]} />
        <Animated.View style={[styles.viewCds, { transform: [{ translateY }] }]}>
          <ImageBackground
              source={require('../images/foto10.png')} 
            style={styles.cardBackground}
          >
            <TouchableOpacity style={styles.closeIcon}>
              <Feather name="x" size={24} color="black" />
            </TouchableOpacity>

            <Image 
              source={avatar ? { uri: avatar } : require('../images/foto13.png')}
              style={styles.avatar} 
            />
            <TouchableOpacity style={styles.avatarButton} onPress={pickImage}>
              <Text style={styles.avatarButtonText}>Trocar Avatar</Text>
            </TouchableOpacity>

            <Animated.View style={{ transform: [{ translateY }] }}>
            <Text>Nickname:</Text>
              <View style={styles.inputContainer}>
                <AntDesign name="user" size={24} color="black" style={styles.iconStyle} />
                <TextInput
                  style={styles.InputName}
                  placeholder="Nickname:"
                  placeholderTextColor="gray"
                />
              </View>
              <Text>E-mail:</Text>
              <View style={styles.inputContainer}>
              <Fontisto name="email" size={24} color="black" />
              <TextInput
                style={styles.InputName}
                placeholder="E-mail:"
              />
              </View>
              <Text>Senha:</Text>
              <View style={styles.inputContainer}>
              <AntDesign name="staro" size={24} color="black" />
              <TextInput
                style={styles.InputName}
                placeholder="Senha:"
                secureTextEntry={true}
              />
              </View>
              <Text>Confirmar senha:</Text>
              <View style={styles.inputContainer}>
              <AntDesign name="star" size={24} color="black" />
              <TextInput
                style={styles.InputName}
                placeholder="Confirmar Senha:"
                secureTextEntry={true}
              />
              </View>

   {/* Ícones do Facebook alinhados lado a lado */}
   <View style={styles.iconRow}>
    <TouchableOpacity style={styles.facebookeInstaIcon}>
      <Entypo name="facebook-with-circle" size={27} color="black" />
    </TouchableOpacity>
    <TouchableOpacity style={styles.facebookeInstaIcon}>
    <Entypo name="instagram-with-circle" size={27} color="black" />
    </TouchableOpacity>
  </View>

              <TouchableOpacity
                style={styles.BtnCadastro}
                onPress={() => Alert.alert('Cadastro Iniciado')}
              >
                <Text style={styles.cdsButtonText}>Cadastrar</Text>
            
              </TouchableOpacity>
            </Animated.View>
          </ImageBackground>
        </Animated.View>
      </ImageBackground>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: 'white',
    padding: 0,
    margin: 0,
  },
  iconRow: {
    flexDirection: 'row',
    justifyContent: 'center', 
    marginVertical: 20,  
  },
  facebookeInstaIcon: {
    marginHorizontal: 10,  
  },
  
  
  closeIcon: {
    position: 'absolute',
    top: "3%",
    right: "5%",
    
  },
  avatar: {
    width: 90,
    height: 90,
    borderRadius: 60,
    marginBottom: 10,
    borderWidth: 2,
    borderColor: '#000',
  },
  avatarButton: {
    backgroundColor: '#fadb42',
    paddingVertical: 5,
    paddingHorizontal: 10,
    marginBottom: 5,
    alignSelf: 'center',
    borderRadius: 8,
    shadowColor: "#000",
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.2,
    shadowRadius: 3.5,
    elevation: 6,
    flexDirection: 'row',
    justifyContent: 'center',
  },
  avatarButtonText: {
    color: '#fff',
    fontSize: 16,
    fontWeight: 'bold',
  },
  background: {
    flex: 1,
    width: '100%',
    height: '100%',
    alignItems: 'center',
    justifyContent: 'center',
    margin: 0,
    padding: 0,
  },
  cardBackground: {
    flex: 1,
    width: '100%',
    height: '100%',
    alignItems: 'center',
    justifyContent: 'center',
    borderRadius: 25, 
    overflow: 'hidden', 
  },
  inputContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    borderBottomWidth: 1,
    borderBottomColor: 'black',
    marginBottom: 10,
  },
  iconStyle: {
    marginRight: 10,
  },
  InputName: {
    width: 260,
    height: 35,
    color: 'black',
    paddingHorizontal: 12,
  },
  BtnCadastro: {
    alignSelf: "center",
    alignItems: "center",
    justifyContent: "center",
    height: "10%",
    width: 140,
    marginTop: 20,
    backgroundColor: "#fadb42",
    borderRadius: 8,
    shadowColor: "#000",
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.2,
    shadowRadius: 3.5,
    elevation: 6,
  },
  cdsButtonText: {
    color: 'white',
    fontSize: 18,
    fontWeight: 'bold',

  },
  viewCds: {
    height: '80%',
    width: '80%',
    backgroundColor: 'rgba(255, 255, 255, 0.3)', // fundo translúcido
    borderRadius: 30, // Redução do borderRadius para suavizar o arredondamento
    borderWidth: 2, // Adicionando uma borda
    borderColor: 'rgba(0, 0, 0, 0.2)', // Cor leve para a borda
    alignItems: 'flex-start',
    justifyContent: 'center',
    paddingHorizontal: 20,
    paddingVertical: 30,
    shadowColor: "#000",
    shadowOffset: {
      width: 0,
      height: 4,
    },
    shadowOpacity: 0.3,
    shadowRadius: 5,
    elevation: 8,
  },
  
});
